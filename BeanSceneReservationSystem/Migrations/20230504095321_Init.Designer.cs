// <auto-generated />
using System;
using BeanSceneReservationSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeanSceneReservationSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230504095321_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Main"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Outside"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Balcony"
                        });
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GuestNumber")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservationSourceId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SittingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReservationSourceId");

                    b.HasIndex("ReservationStatusId");

                    b.HasIndex("SittingId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.ReservationSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReservationSources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Online"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Email"
                        },
                        new
                        {
                            Id = 3,
                            Name = "In Person"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Phone"
                        });
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.ReservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReservationStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Confirmed"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Seated"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cancelled"
                        });
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bean Scene"
                        });
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.RestaurantTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("RestaurantTables");
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Sitting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("SittingTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("SittingTypeId");

                    b.ToTable("Sittings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 5, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 5, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 5, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 5, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 5, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 5, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 6, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 6, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 6, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 6, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 6, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 6, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 7, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 7, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 7, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 7, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 7, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 7, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 8, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 8, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 8, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 8, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 8, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 8, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 9, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 9, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 9, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 9, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 9, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 9, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 10, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 10, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 10, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 10, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 10, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 10, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 11, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 11, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 11, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 11, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 11, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 11, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 12, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 12, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 23,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 12, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 12, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 24,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 12, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 12, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 25,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 13, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 13, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 26,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 13, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 13, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 27,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 13, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 13, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 28,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 14, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 14, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 29,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 14, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 14, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 30,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 14, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 14, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 31,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 15, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 15, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 32,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 15, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 15, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 33,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 15, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 15, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 34,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 16, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 16, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 35,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 16, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 16, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 36,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 16, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 16, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 37,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 17, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 17, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 38,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 17, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 17, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 39,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 17, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 17, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 40,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 18, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 18, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 41,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 18, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 18, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 42,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 18, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 18, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 43,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 19, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 19, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 44,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 19, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 19, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 45,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 19, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 19, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 46,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 20, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 20, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 47,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 20, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 20, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 48,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 20, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 20, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 49,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 21, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 21, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 50,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 21, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 21, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 51,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 21, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 21, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 52,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 22, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 22, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 53,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 22, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 22, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 54,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 22, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 22, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 55,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 23, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 23, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 56,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 23, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 23, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 57,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 23, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 23, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 58,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 24, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 24, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 59,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 24, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 24, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 60,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 24, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 24, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 61,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 25, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 25, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 62,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 25, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 25, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 63,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 25, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 25, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 64,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 26, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 26, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 65,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 26, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 26, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 66,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 26, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 26, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 67,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 27, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 27, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 68,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 27, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 27, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 69,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 27, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 27, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 70,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 28, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 28, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 71,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 28, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 28, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 72,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 28, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 28, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 73,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 29, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 29, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 74,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 29, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 29, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 75,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 29, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 29, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 76,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 30, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 30, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 77,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 30, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 30, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 78,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 30, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 30, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 79,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 5, 31, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 5, 31, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 80,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 5, 31, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 5, 31, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 81,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 5, 31, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 5, 31, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 82,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 6, 1, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 6, 1, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 83,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 6, 1, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 6, 1, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 84,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 6, 1, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 6, 1, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 85,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 6, 2, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 6, 2, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 86,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 6, 2, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 6, 2, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 87,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 6, 2, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 6, 2, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 88,
                            Active = true,
                            Capacity = 30,
                            EndTime = new DateTime(2023, 6, 3, 11, 0, 0, 0, DateTimeKind.Local),
                            Name = "Breakfast",
                            RestaurantId = 1,
                            SittingTypeId = 1,
                            StartTime = new DateTime(2023, 6, 3, 7, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 89,
                            Active = true,
                            Capacity = 40,
                            EndTime = new DateTime(2023, 6, 3, 16, 0, 0, 0, DateTimeKind.Local),
                            Name = "Lunch",
                            RestaurantId = 1,
                            SittingTypeId = 2,
                            StartTime = new DateTime(2023, 6, 3, 12, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 90,
                            Active = true,
                            Capacity = 50,
                            EndTime = new DateTime(2023, 6, 3, 21, 0, 0, 0, DateTimeKind.Local),
                            Name = "Dinner",
                            RestaurantId = 1,
                            SittingTypeId = 3,
                            StartTime = new DateTime(2023, 6, 3, 17, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.SittingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SittingTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dinner"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2c5e174e-3b0e-446f-86af-483d56fd7210",
                            ConcurrencyStamp = "92e1e396-6b2a-4cf2-92c2-9957d329fd04",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = "60226d81-1906-41cb-8f00-44e34ee158cd",
                            ConcurrencyStamp = "680d754a-56a7-40db-951a-fd5d58da509b",
                            Name = "Staff",
                            NormalizedName = "STAFF"
                        },
                        new
                        {
                            Id = "e07d60fb-e2bd-4443-9759-8edc2c65ba17",
                            ConcurrencyStamp = "9ebad651-296d-4a30-b38f-85eecd7b6663",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9cdcce16-c12e-45ee-8f2f-22a7105eb2e3",
                            Email = "Manager@test.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MANAGER@TEST.COM",
                            NormalizedUserName = "Manager@test.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEHl/6IaGE7KvA5XrYBWeKE4MFbpYTS9bVJm/WmD4yCmT1kS78eWZQDwswy3aWHymDw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "62ebaafa-159c-4a41-8c56-9f493455df44",
                            TwoFactorEnabled = false,
                            UserName = "Manager@test.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            RoleId = "2c5e174e-3b0e-446f-86af-483d56fd7210"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Area", b =>
                {
                    b.HasOne("BeanSceneReservationSystem.Data.Restaurant", null)
                        .WithMany("Areas")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Reservation", b =>
                {
                    b.HasOne("BeanSceneReservationSystem.Data.ReservationSource", "ReservationSource")
                        .WithMany()
                        .HasForeignKey("ReservationSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeanSceneReservationSystem.Data.ReservationStatus", "ReservationStatus")
                        .WithMany()
                        .HasForeignKey("ReservationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeanSceneReservationSystem.Data.Sitting", "Sitting")
                        .WithMany("Reservations")
                        .HasForeignKey("SittingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReservationSource");

                    b.Navigation("ReservationStatus");

                    b.Navigation("Sitting");
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.RestaurantTable", b =>
                {
                    b.HasOne("BeanSceneReservationSystem.Data.Area", null)
                        .WithMany("RestaurantTables")
                        .HasForeignKey("AreaId");
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Sitting", b =>
                {
                    b.HasOne("BeanSceneReservationSystem.Data.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeanSceneReservationSystem.Data.SittingType", "SittingType")
                        .WithMany()
                        .HasForeignKey("SittingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("SittingType");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Area", b =>
                {
                    b.Navigation("RestaurantTables");
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Restaurant", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("BeanSceneReservationSystem.Data.Sitting", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
